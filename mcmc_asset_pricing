push!(LOAD_PATH, "/Users/francescacrucinio/Documents/FE2kind_WGF")
# Julia packages
using Revise;
using StatsPlots;
using Distributions;
using Statistics;
using StatsBase;
using Random;
using SpecialFunctions;
using RCall;
@rimport ks as rks;
using RJmcmc_2kind;

# set seed
Random.seed!(1234);

# problem set up 
lambda = 0.85;
b = 0.9;
a = 0.05;
varK = 100;
# define kernel and forcing
function K(x, y)
    d0 = Normal(a*x + b, sqrt(varK))
    truncated_d0 = truncated(d0, 0, 1)
    return(pdf.(truncated_d0, y))
end
phi(x) = (exp(x^2)-1) * (x <= 1) * (x >= 0);
phi_gradient(x) = 2*x*exp(x^2) * (x <= 1) * (x >= 0);


### reversible jump MCMC
N = 100000;
c1_zero = -1 + 1/2*sqrt(pi)*erfi(1);
X, k, p1 = RJMCMC_asset_pricing(N, phi, lambda, K);

x_values = range(0, 1, length = 100);
pi_solution_mcmc = zeros(length(x_values));
for i=1:length(x_values)
    pi_solution_mcmc[i] = mean(K(x_values[i], getindex.(X,1)));
end
pi_solution_mcmc = lambda*pi_solution_mcmc*c1_zero/p1 .+ phi.(x_values);
plot(x_values, pi_solution_mcmc)