# Julia packages
using Revise;
using StatsPlots;
using Distributions;
using Statistics;
using StatsBase;
using Random;
using SpecialFunctions;
using RCall;
@rimport ks as rks;

# set seed
Random.seed!(1234);

# problem set up 
lambda = 0.85;
a = 0.05;
b = 0.9;
varK = 100;
# define kernel and forcing
function K(x, y)
    d0 = Normal(a*x + b, sqrt(varK))
    truncated_d0 = truncated(d0, 0, 1)
    return(pdf.(truncated_d0, y))
end
phi(x) = (exp(x^2)-1) * (x <= 1) * (x >= 0);
phi_gradient(x) = 2*x*exp(x^2) * (x <= 1) * (x >= 0);